{
    "Object.getOwnPropertyDescriptor(Plugin.prototype, \"version\")": {
        "returnValue": 0
    },
    "navigator.plugins.length": {
        "returnValue": 5
    },
    "navigator.mimeTypes.length": {
        "returnValue": 2
    },
    "navigator.pdfViewerEnabled": {
        "returnValue": true
    },
    "new SharedArrayBuffer()": {
        "exception": "SharedArrayBuffer is not defined"
    },
    "((obj) => obj())(Function.prototype)": {
        "returnValue": 0
    },
    "((obj) => new obj())(Function.prototype)": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(Function.prototype)": {
        "returnValue": "function"
    },
    "((obj) => obj.__proto__)(Function.prototype)": {
        "returnValue": {}
    },
    "((obj) => obj.prototype)(Function.prototype)": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(Function.prototype)": {
        "returnValue": []
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(Function.prototype)": {
        "returnValue": {
            "toString": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            },
            "apply": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            },
            "call": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            },
            "bind": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            },
            "arguments": {
                "enumerable": false,
                "configurable": true
            },
            "caller": {
                "enumerable": false,
                "configurable": true
            },
            "constructor": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            },
            "length": {
                "value": 0,
                "writable": false,
                "enumerable": false,
                "configurable": true
            },
            "name": {
                "value": "",
                "writable": false,
                "enumerable": false,
                "configurable": true
            }
        }
    },
    "((obj) => Object.getOwnPropertyNames(obj))(Function.prototype)": {
        "returnValue": [
            "toString",
            "apply",
            "call",
            "bind",
            "arguments",
            "caller",
            "constructor",
            "length",
            "name"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(Function.prototype)": {
        "returnValue": [
            null
        ]
    },
    "((obj) => Object.getPrototypeOf(obj))(Function.prototype)": {
        "returnValue": {}
    },
    "((obj) => Object.is(obj, obj))(Function.prototype)": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(Function.prototype)": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(Function.prototype)": {
        "returnValue": []
    },
    "((obj) => Object.values(obj))(Function.prototype)": {
        "returnValue": []
    },
    "((obj) => [...obj])(Function.prototype)": {
        "exception": "obj is not iterable"
    },
    "((obj) => ({...obj}))(Function.prototype)": {
        "returnValue": {}
    },
    "((obj) => Array.from(obj))(Function.prototype)": {
        "returnValue": []
    },
    "((obj) => Array.isArray(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Array.of(obj))(Function.prototype)": {
        "returnValue": [
            null
        ]
    },
    "((obj) => JSON.stringify(obj))(Function.prototype)": {
        "returnValue": 0
    },
    "((obj) => structuredClone(obj))(Function.prototype)": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(Function.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(Function.prototype)": {
        "returnValue": "function () {\n    [native code]\n}"
    },
    "((obj) => obj + \"\")(Function.prototype)": {
        "returnValue": "function () {\n    [native code]\n}"
    },
    "((obj) => obj.toString())(Function.prototype)": {
        "returnValue": "function () {\n    [native code]\n}"
    },
    "((obj) => Number.isFinite(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(Function.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(Function.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(Function.prototype)": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(Function.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(Function.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(Function.prototype)": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => obj == obj)(Function.prototype)": {
        "returnValue": true
    },
    "((obj) => obj != obj)(Function.prototype)": {
        "returnValue": false
    },
    "((obj) => obj())(Function.prototype.toString)": {
        "exception": "can't convert undefined to object"
    },
    "((obj) => new obj())(Function.prototype.toString)": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(Function.prototype.toString)": {
        "returnValue": "function"
    },
    "((obj) => obj.prototype)(Function.prototype.toString)": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(Function.prototype.toString)": {
        "returnValue": []
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(Function.prototype.toString)": {
        "returnValue": {
            "length": {
                "value": 0,
                "writable": false,
                "enumerable": false,
                "configurable": true
            },
            "name": {
                "value": "toString",
                "writable": false,
                "enumerable": false,
                "configurable": true
            }
        }
    },
    "((obj) => Object.getOwnPropertyNames(obj))(Function.prototype.toString)": {
        "returnValue": [
            "length",
            "name"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(Function.prototype.toString)": {
        "returnValue": []
    },
    "((obj) => Object.is(obj, obj))(Function.prototype.toString)": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(Function.prototype.toString)": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(Function.prototype.toString)": {
        "returnValue": []
    },
    "((obj) => Object.values(obj))(Function.prototype.toString)": {
        "returnValue": []
    },
    "((obj) => [...obj])(Function.prototype.toString)": {
        "exception": "obj is not iterable"
    },
    "((obj) => ({...obj}))(Function.prototype.toString)": {
        "returnValue": {}
    },
    "((obj) => Array.from(obj))(Function.prototype.toString)": {
        "returnValue": []
    },
    "((obj) => Array.isArray(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Array.of(obj))(Function.prototype.toString)": {
        "returnValue": [
            null
        ]
    },
    "((obj) => JSON.stringify(obj))(Function.prototype.toString)": {
        "returnValue": 0
    },
    "((obj) => structuredClone(obj))(Function.prototype.toString)": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(Function.prototype.toString)": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(Function.prototype.toString)": {
        "returnValue": "function toString() {\n    [native code]\n}"
    },
    "((obj) => obj + \"\")(Function.prototype.toString)": {
        "returnValue": "function toString() {\n    [native code]\n}"
    },
    "((obj) => obj.toString())(Function.prototype.toString)": {
        "returnValue": "function toString() {\n    [native code]\n}"
    },
    "((obj) => Number.isFinite(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(Function.prototype.toString)": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(Function.prototype.toString)": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(Function.prototype.toString)": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(Function.prototype.toString)": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(Function.prototype.toString)": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(Function.prototype.toString)": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => obj == obj)(Function.prototype.toString)": {
        "returnValue": true
    },
    "((obj) => obj != obj)(Function.prototype.toString)": {
        "returnValue": false
    },
    "((obj) => obj)(navigator)": {
        "returnValue": {}
    },
    "((obj) => obj())(navigator)": {
        "exception": "obj is not a function"
    },
    "((obj) => new obj())(navigator)": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(navigator)": {
        "returnValue": "object"
    },
    "((obj) => obj.prototype)(navigator)": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(navigator)": {
        "returnValue": []
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(navigator)": {
        "returnValue": {}
    },
    "((obj) => Object.getOwnPropertyNames(obj))(navigator)": {
        "returnValue": []
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(navigator)": {
        "returnValue": []
    },
    "((obj) => Object.is(obj, obj))(navigator)": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(navigator)": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(navigator)": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(navigator)": {
        "returnValue": []
    },
    "((obj) => Object.values(obj))(navigator)": {
        "returnValue": []
    },
    "((obj) => [...obj])(navigator)": {
        "exception": "obj is not iterable"
    },
    "((obj) => ({...obj}))(navigator)": {
        "returnValue": {}
    },
    "((obj) => Array.from(obj))(navigator)": {
        "returnValue": []
    },
    "((obj) => Array.isArray(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => Array.of(obj))(navigator)": {
        "returnValue": [
            {}
        ]
    },
    "((obj) => JSON.stringify(obj))(navigator)": {
        "returnValue": "{}"
    },
    "((obj) => structuredClone(obj))(navigator)": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(navigator)": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => obj + \"\")(navigator)": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => obj.toString())(navigator)": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => Number.isFinite(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(navigator)": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(navigator)": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(navigator)": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(navigator)": {
        "returnValue": false
    },
    "((obj) => obj == obj)(navigator)": {
        "returnValue": true
    },
    "((obj) => obj != obj)(navigator)": {
        "returnValue": false
    },
    "((obj) => obj())(Object.getPrototypeOf(navigator))": {
        "exception": "obj is not a function"
    },
    "((obj) => new obj())(Object.getPrototypeOf(navigator))": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(Object.getPrototypeOf(navigator))": {
        "returnValue": "object"
    },
    "((obj) => obj.__proto__)(Object.getPrototypeOf(navigator))": {
        "returnValue": {}
    },
    "((obj) => obj.prototype)(Object.getPrototypeOf(navigator))": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(Object.getPrototypeOf(navigator))": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": {
            "vibrate": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "javaEnabled": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "getGamepads": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "mozGetUserMedia": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "sendBeacon": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "requestMediaKeySystemAccess": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "registerProtocolHandler": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "taintEnabled": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "permissions": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mimeTypes": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "plugins": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "pdfViewerEnabled": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "doNotTrack": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "maxTouchPoints": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mediaCapabilities": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "oscpu": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "vendor": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "vendorSub": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "productSub": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "cookieEnabled": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "buildID": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mediaDevices": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "serviceWorker": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "credentials": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "clipboard": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mediaSession": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "webdriver": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "hardwareConcurrency": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "geolocation": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "appCodeName": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "appName": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "appVersion": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "platform": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "userAgent": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "product": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "language": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "languages": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "locks": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "onLine": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "storage": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "constructor": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            }
        }
    },
    "((obj) => Object.getOwnPropertyNames(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": [
            "vibrate",
            "javaEnabled",
            "getGamepads",
            "mozGetUserMedia",
            "sendBeacon",
            "requestMediaKeySystemAccess",
            "registerProtocolHandler",
            "taintEnabled",
            "permissions",
            "mimeTypes",
            "plugins",
            "pdfViewerEnabled",
            "doNotTrack",
            "maxTouchPoints",
            "mediaCapabilities",
            "oscpu",
            "vendor",
            "vendorSub",
            "productSub",
            "cookieEnabled",
            "buildID",
            "mediaDevices",
            "serviceWorker",
            "credentials",
            "clipboard",
            "mediaSession",
            "webdriver",
            "hardwareConcurrency",
            "geolocation",
            "appCodeName",
            "appName",
            "appVersion",
            "platform",
            "userAgent",
            "product",
            "language",
            "languages",
            "locks",
            "onLine",
            "storage",
            "constructor"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": [
            null
        ]
    },
    "((obj) => Object.getPrototypeOf(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": {}
    },
    "((obj) => Object.is(obj, obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": [
            "vibrate",
            "javaEnabled",
            "getGamepads",
            "mozGetUserMedia",
            "sendBeacon",
            "requestMediaKeySystemAccess",
            "registerProtocolHandler",
            "taintEnabled",
            "permissions",
            "mimeTypes",
            "plugins",
            "pdfViewerEnabled",
            "doNotTrack",
            "maxTouchPoints",
            "mediaCapabilities",
            "oscpu",
            "vendor",
            "vendorSub",
            "productSub",
            "cookieEnabled",
            "buildID",
            "mediaDevices",
            "serviceWorker",
            "credentials",
            "clipboard",
            "mediaSession",
            "webdriver",
            "hardwareConcurrency",
            "geolocation",
            "appCodeName",
            "appName",
            "appVersion",
            "platform",
            "userAgent",
            "product",
            "language",
            "languages",
            "locks",
            "onLine",
            "storage"
        ]
    },
    "((obj) => Object.values(obj))(Object.getPrototypeOf(navigator))": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => [...obj])(Object.getPrototypeOf(navigator))": {
        "exception": "obj is not iterable"
    },
    "((obj) => ({...obj}))(Object.getPrototypeOf(navigator))": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => Array.from(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": []
    },
    "((obj) => Array.isArray(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => JSON.stringify(obj))(Object.getPrototypeOf(navigator))": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => structuredClone(obj))(Object.getPrototypeOf(navigator))": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(Object.getPrototypeOf(navigator))": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(Object.getPrototypeOf(navigator))": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => obj + \"\")(Object.getPrototypeOf(navigator))": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => obj.toString())(Object.getPrototypeOf(navigator))": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => Number.isFinite(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(Object.getPrototypeOf(navigator))": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(Object.getPrototypeOf(navigator))": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => obj == obj)(Object.getPrototypeOf(navigator))": {
        "returnValue": true
    },
    "((obj) => obj != obj)(Object.getPrototypeOf(navigator))": {
        "returnValue": false
    },
    "((obj) => obj())(Navigator)": {
        "exception": "Illegal constructor."
    },
    "((obj) => new obj())(Navigator)": {
        "exception": "Illegal constructor."
    },
    "((obj) => typeof obj)(Navigator)": {
        "returnValue": "function"
    },
    "((obj) => Object.entries(obj))(Navigator)": {
        "returnValue": []
    },
    "((obj) => Object.getOwnPropertyNames(obj))(Navigator)": {
        "returnValue": [
            "length",
            "name",
            "prototype"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(Navigator)": {
        "returnValue": [
            null
        ]
    },
    "((obj) => Object.is(obj, obj))(Navigator)": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(Navigator)": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(Navigator)": {
        "returnValue": []
    },
    "((obj) => Object.values(obj))(Navigator)": {
        "returnValue": []
    },
    "((obj) => [...obj])(Navigator)": {
        "exception": "obj is not iterable"
    },
    "((obj) => ({...obj}))(Navigator)": {
        "returnValue": {}
    },
    "((obj) => Array.from(obj))(Navigator)": {
        "returnValue": []
    },
    "((obj) => Array.isArray(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Array.of(obj))(Navigator)": {
        "returnValue": [
            null
        ]
    },
    "((obj) => JSON.stringify(obj))(Navigator)": {
        "returnValue": 0
    },
    "((obj) => structuredClone(obj))(Navigator)": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(Navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(Navigator)": {
        "returnValue": "function Navigator() {\n    [native code]\n}"
    },
    "((obj) => obj + \"\")(Navigator)": {
        "returnValue": "function Navigator() {\n    [native code]\n}"
    },
    "((obj) => obj.toString())(Navigator)": {
        "returnValue": "function Navigator() {\n    [native code]\n}"
    },
    "((obj) => Number.isFinite(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(Navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(Navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(Navigator)": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(Navigator)": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(Navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(Navigator)": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(Navigator)": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(Navigator)": {
        "returnValue": false
    },
    "((obj) => obj == obj)(Navigator)": {
        "returnValue": true
    },
    "((obj) => obj != obj)(Navigator)": {
        "returnValue": false
    },
    "((obj) => obj())(Navigator.prototype)": {
        "exception": "obj is not a function"
    },
    "((obj) => new obj())(Navigator.prototype)": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(Navigator.prototype)": {
        "returnValue": "object"
    },
    "((obj) => obj.__proto__)(Navigator.prototype)": {
        "returnValue": {}
    },
    "((obj) => obj.prototype)(Navigator.prototype)": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(Navigator.prototype)": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(Navigator.prototype)": {
        "returnValue": {
            "vibrate": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "javaEnabled": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "getGamepads": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "mozGetUserMedia": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "sendBeacon": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "requestMediaKeySystemAccess": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "registerProtocolHandler": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "taintEnabled": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "permissions": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mimeTypes": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "plugins": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "pdfViewerEnabled": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "doNotTrack": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "maxTouchPoints": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mediaCapabilities": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "oscpu": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "vendor": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "vendorSub": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "productSub": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "cookieEnabled": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "buildID": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mediaDevices": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "serviceWorker": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "credentials": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "clipboard": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "mediaSession": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "webdriver": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "hardwareConcurrency": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "geolocation": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "appCodeName": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "appName": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "appVersion": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "platform": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "userAgent": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "product": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "language": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "languages": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "locks": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "onLine": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "storage": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "constructor": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            }
        }
    },
    "((obj) => Object.getOwnPropertyNames(obj))(Navigator.prototype)": {
        "returnValue": [
            "vibrate",
            "javaEnabled",
            "getGamepads",
            "mozGetUserMedia",
            "sendBeacon",
            "requestMediaKeySystemAccess",
            "registerProtocolHandler",
            "taintEnabled",
            "permissions",
            "mimeTypes",
            "plugins",
            "pdfViewerEnabled",
            "doNotTrack",
            "maxTouchPoints",
            "mediaCapabilities",
            "oscpu",
            "vendor",
            "vendorSub",
            "productSub",
            "cookieEnabled",
            "buildID",
            "mediaDevices",
            "serviceWorker",
            "credentials",
            "clipboard",
            "mediaSession",
            "webdriver",
            "hardwareConcurrency",
            "geolocation",
            "appCodeName",
            "appName",
            "appVersion",
            "platform",
            "userAgent",
            "product",
            "language",
            "languages",
            "locks",
            "onLine",
            "storage",
            "constructor"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(Navigator.prototype)": {
        "returnValue": [
            null
        ]
    },
    "((obj) => Object.getPrototypeOf(obj))(Navigator.prototype)": {
        "returnValue": {}
    },
    "((obj) => Object.is(obj, obj))(Navigator.prototype)": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(Navigator.prototype)": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(Navigator.prototype)": {
        "returnValue": [
            "vibrate",
            "javaEnabled",
            "getGamepads",
            "mozGetUserMedia",
            "sendBeacon",
            "requestMediaKeySystemAccess",
            "registerProtocolHandler",
            "taintEnabled",
            "permissions",
            "mimeTypes",
            "plugins",
            "pdfViewerEnabled",
            "doNotTrack",
            "maxTouchPoints",
            "mediaCapabilities",
            "oscpu",
            "vendor",
            "vendorSub",
            "productSub",
            "cookieEnabled",
            "buildID",
            "mediaDevices",
            "serviceWorker",
            "credentials",
            "clipboard",
            "mediaSession",
            "webdriver",
            "hardwareConcurrency",
            "geolocation",
            "appCodeName",
            "appName",
            "appVersion",
            "platform",
            "userAgent",
            "product",
            "language",
            "languages",
            "locks",
            "onLine",
            "storage"
        ]
    },
    "((obj) => Object.values(obj))(Navigator.prototype)": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => [...obj])(Navigator.prototype)": {
        "exception": "obj is not iterable"
    },
    "((obj) => ({...obj}))(Navigator.prototype)": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => Array.from(obj))(Navigator.prototype)": {
        "returnValue": []
    },
    "((obj) => Array.isArray(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => JSON.stringify(obj))(Navigator.prototype)": {
        "exception": "'get permissions' called on an object that does not implement interface Navigator."
    },
    "((obj) => structuredClone(obj))(Navigator.prototype)": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(Navigator.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(Navigator.prototype)": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => obj + \"\")(Navigator.prototype)": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => obj.toString())(Navigator.prototype)": {
        "returnValue": "[object Navigator]"
    },
    "((obj) => Number.isFinite(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(Navigator.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(Navigator.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(Navigator.prototype)": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(Navigator.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(Navigator.prototype)": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(Navigator.prototype)": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => obj == obj)(Navigator.prototype)": {
        "returnValue": true
    },
    "((obj) => obj != obj)(Navigator.prototype)": {
        "returnValue": false
    },
    "((obj) => obj)(navigator.plugins)": {
        "returnValue": {
            "0": {
                "0": {},
                "1": {}
            },
            "1": {
                "0": "#((obj) => obj)(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => obj)(navigator~1plugins).returnValue.0.1"
            },
            "2": {
                "0": "#((obj) => obj)(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => obj)(navigator~1plugins).returnValue.0.1"
            },
            "3": {
                "0": "#((obj) => obj)(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => obj)(navigator~1plugins).returnValue.0.1"
            },
            "4": {
                "0": "#((obj) => obj)(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => obj)(navigator~1plugins).returnValue.0.1"
            }
        }
    },
    "((obj) => obj())(navigator.plugins)": {
        "exception": "obj is not a function"
    },
    "((obj) => new obj())(navigator.plugins)": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(navigator.plugins)": {
        "returnValue": "object"
    },
    "((obj) => obj.prototype)(navigator.plugins)": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(navigator.plugins)": {
        "returnValue": [
            [
                "0",
                {
                    "0": {},
                    "1": {}
                }
            ],
            [
                "1",
                {
                    "0": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.0",
                    "1": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.1"
                }
            ],
            [
                "2",
                {
                    "0": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.0",
                    "1": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.1"
                }
            ],
            [
                "3",
                {
                    "0": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.0",
                    "1": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.1"
                }
            ],
            [
                "4",
                {
                    "0": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.0",
                    "1": "#((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0.1.1"
                }
            ]
        ]
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(navigator.plugins)": {
        "returnValue": {
            "0": {
                "value": {
                    "0": {},
                    "1": {}
                },
                "writable": false,
                "enumerable": true,
                "configurable": true
            },
            "1": {
                "value": {
                    "0": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.0",
                    "1": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.1"
                },
                "writable": false,
                "enumerable": true,
                "configurable": true
            },
            "2": {
                "value": {
                    "0": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.0",
                    "1": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.1"
                },
                "writable": false,
                "enumerable": true,
                "configurable": true
            },
            "3": {
                "value": {
                    "0": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.0",
                    "1": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.1"
                },
                "writable": false,
                "enumerable": true,
                "configurable": true
            },
            "4": {
                "value": {
                    "0": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.0",
                    "1": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value.1"
                },
                "writable": false,
                "enumerable": true,
                "configurable": true
            },
            "PDF Viewer": {
                "writable": false,
                "enumerable": false,
                "configurable": true,
                "value": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.0.value"
            },
            "Chrome PDF Viewer": {
                "writable": false,
                "enumerable": false,
                "configurable": true,
                "value": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.1.value"
            },
            "Chromium PDF Viewer": {
                "writable": false,
                "enumerable": false,
                "configurable": true,
                "value": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.2.value"
            },
            "Microsoft Edge PDF Viewer": {
                "writable": false,
                "enumerable": false,
                "configurable": true,
                "value": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.3.value"
            },
            "WebKit built-in PDF": {
                "writable": false,
                "enumerable": false,
                "configurable": true,
                "value": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.4.value"
            }
        }
    },
    "((obj) => Object.getOwnPropertyNames(obj))(navigator.plugins)": {
        "returnValue": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "PDF Viewer",
            "Chrome PDF Viewer",
            "Chromium PDF Viewer",
            "Microsoft Edge PDF Viewer",
            "WebKit built-in PDF"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(navigator.plugins)": {
        "returnValue": []
    },
    "((obj) => Object.is(obj, obj))(navigator.plugins)": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(navigator.plugins)": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(navigator.plugins)": {
        "returnValue": [
            "0",
            "1",
            "2",
            "3",
            "4"
        ]
    },
    "((obj) => Object.values(obj))(navigator.plugins)": {
        "returnValue": [
            {
                "0": {},
                "1": {}
            },
            {
                "0": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Object~1values(obj))(navigator~1plugins).returnValue.0.1"
            }
        ]
    },
    "((obj) => [...obj])(navigator.plugins)": {
        "returnValue": [
            {
                "0": {},
                "1": {}
            },
            {
                "0": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.0.1"
            }
        ]
    },
    "((obj) => ({...obj}))(navigator.plugins)": {
        "returnValue": {
            "0": {
                "0": {},
                "1": {}
            },
            "1": {
                "0": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.1"
            },
            "2": {
                "0": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.1"
            },
            "3": {
                "0": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.1"
            },
            "4": {
                "0": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.0.1"
            }
        }
    },
    "((obj) => Array.from(obj))(navigator.plugins)": {
        "returnValue": [
            {
                "0": {},
                "1": {}
            },
            {
                "0": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.1"
            },
            {
                "0": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.0",
                "1": "#((obj) => Array~1from(obj))(navigator~1plugins).returnValue.0.1"
            }
        ]
    },
    "((obj) => Array.isArray(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Array.of(obj))(navigator.plugins)": {
        "returnValue": [
            {
                "0": {
                    "0": {},
                    "1": {}
                },
                "1": {
                    "0": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.0",
                    "1": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.1"
                },
                "2": {
                    "0": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.0",
                    "1": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.1"
                },
                "3": {
                    "0": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.0",
                    "1": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.1"
                },
                "4": {
                    "0": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.0",
                    "1": "#((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.0.1"
                }
            }
        ]
    },
    "((obj) => JSON.stringify(obj))(navigator.plugins)": {
        "returnValue": "{\"0\":{\"0\":{},\"1\":{}},\"1\":{\"0\":{},\"1\":{}},\"2\":{\"0\":{},\"1\":{}},\"3\":{\"0\":{},\"1\":{}},\"4\":{\"0\":{},\"1\":{}}}"
    },
    "((obj) => structuredClone(obj))(navigator.plugins)": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(navigator.plugins)": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(navigator.plugins)": {
        "returnValue": "[object PluginArray]"
    },
    "((obj) => obj + \"\")(navigator.plugins)": {
        "returnValue": "[object PluginArray]"
    },
    "((obj) => obj.toString())(navigator.plugins)": {
        "returnValue": "[object PluginArray]"
    },
    "((obj) => Number.isFinite(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(navigator.plugins)": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(navigator.plugins)": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(navigator.plugins)": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(navigator.plugins)": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(navigator.plugins)": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(navigator.plugins)": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => obj == obj)(navigator.plugins)": {
        "returnValue": true
    },
    "((obj) => obj != obj)(navigator.plugins)": {
        "returnValue": false
    },
    "((obj) => obj())(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "obj is not a function"
    },
    "((obj) => new obj())(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "object"
    },
    "((obj) => obj.__proto__)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": {}
    },
    "((obj) => obj.prototype)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "'get length' called on an object that does not implement interface PluginArray."
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": {
            "refresh": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "item": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "namedItem": {
                "writable": true,
                "enumerable": true,
                "configurable": true
            },
            "length": {
                "set": 0,
                "enumerable": true,
                "configurable": true
            },
            "constructor": {
                "writable": true,
                "enumerable": false,
                "configurable": true
            }
        }
    },
    "((obj) => Object.getOwnPropertyNames(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": [
            "refresh",
            "item",
            "namedItem",
            "length",
            "constructor"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": [
            null,
            null
        ]
    },
    "((obj) => Object.getPrototypeOf(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": {}
    },
    "((obj) => Object.is(obj, obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": [
            "refresh",
            "item",
            "namedItem",
            "length"
        ]
    },
    "((obj) => Object.values(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "'get length' called on an object that does not implement interface PluginArray."
    },
    "((obj) => [...obj])(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "'get length' called on an object that does not implement interface PluginArray."
    },
    "((obj) => ({...obj}))(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "'get length' called on an object that does not implement interface PluginArray."
    },
    "((obj) => Array.from(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "'get length' called on an object that does not implement interface PluginArray."
    },
    "((obj) => Array.isArray(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => JSON.stringify(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "exception": "'get length' called on an object that does not implement interface PluginArray."
    },
    "((obj) => structuredClone(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "[object PluginArray]"
    },
    "((obj) => obj + \"\")(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "[object PluginArray]"
    },
    "((obj) => obj.toString())(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "[object PluginArray]"
    },
    "((obj) => Number.isFinite(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => obj == obj)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": true
    },
    "((obj) => obj != obj)(Object.getPrototypeOf(navigator.plugins))": {
        "returnValue": false
    },
    "((obj) => obj)(navigator.plugins[0])": {
        "returnValue": {
            "0": {},
            "1": {}
        }
    },
    "((obj) => obj())(navigator.plugins[0])": {
        "exception": "obj is not a function"
    },
    "((obj) => new obj())(navigator.plugins[0])": {
        "exception": "obj is not a constructor"
    },
    "((obj) => typeof obj)(navigator.plugins[0])": {
        "returnValue": "object"
    },
    "((obj) => obj.prototype)(navigator.plugins[0])": {
        "returnValue": 0
    },
    "((obj) => Object.entries(obj))(navigator.plugins[0])": {
        "returnValue": [
            [
                "0",
                {}
            ],
            [
                "1",
                {}
            ]
        ]
    },
    "((obj) => Object.getOwnPropertyDescriptors(obj))(navigator.plugins[0])": {
        "returnValue": {
            "0": {
                "value": {},
                "writable": false,
                "enumerable": true,
                "configurable": true
            },
            "1": {
                "value": {},
                "writable": false,
                "enumerable": true,
                "configurable": true
            },
            "application/pdf": {
                "writable": false,
                "enumerable": false,
                "configurable": true,
                "value": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins[0]).returnValue.0.value"
            },
            "text/pdf": {
                "writable": false,
                "enumerable": false,
                "configurable": true,
                "value": "#((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins[0]).returnValue.1.value"
            }
        }
    },
    "((obj) => Object.getOwnPropertyNames(obj))(navigator.plugins[0])": {
        "returnValue": [
            "0",
            "1",
            "application/pdf",
            "text/pdf"
        ]
    },
    "((obj) => Object.getOwnPropertySymbols(obj))(navigator.plugins[0])": {
        "returnValue": []
    },
    "((obj) => Object.is(obj, obj))(navigator.plugins[0])": {
        "returnValue": true
    },
    "((obj) => Object.is(obj, undefined))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Object.isExtensible(obj))(navigator.plugins[0])": {
        "returnValue": true
    },
    "((obj) => Object.isFrozen(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Object.isSealed(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Object.keys(obj))(navigator.plugins[0])": {
        "returnValue": [
            "0",
            "1"
        ]
    },
    "((obj) => Object.values(obj))(navigator.plugins[0])": {
        "returnValue": [
            {},
            {}
        ]
    },
    "((obj) => [...obj])(navigator.plugins[0])": {
        "returnValue": [
            {},
            {}
        ]
    },
    "((obj) => ({...obj}))(navigator.plugins[0])": {
        "returnValue": {
            "0": {},
            "1": {}
        }
    },
    "((obj) => Array.from(obj))(navigator.plugins[0])": {
        "returnValue": [
            {},
            {}
        ]
    },
    "((obj) => Array.isArray(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Array.of(obj))(navigator.plugins[0])": {
        "returnValue": [
            {
                "0": {},
                "1": {}
            }
        ]
    },
    "((obj) => JSON.stringify(obj))(navigator.plugins[0])": {
        "returnValue": "{\"0\":{},\"1\":{}}"
    },
    "((obj) => structuredClone(obj))(navigator.plugins[0])": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 27,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "((obj) => +obj)(navigator.plugins[0])": {
        "returnValue": "NaN"
    },
    "((obj) => \"\" + obj)(navigator.plugins[0])": {
        "returnValue": "[object Plugin]"
    },
    "((obj) => obj + \"\")(navigator.plugins[0])": {
        "returnValue": "[object Plugin]"
    },
    "((obj) => obj.toString())(navigator.plugins[0])": {
        "returnValue": "[object Plugin]"
    },
    "((obj) => Number.isFinite(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Number.isInteger(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Number.isNaN(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Number.isSafeInteger(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => Number.parseFloat(obj))(navigator.plugins[0])": {
        "returnValue": "NaN"
    },
    "((obj) => Number.parseInt(obj))(navigator.plugins[0])": {
        "returnValue": "NaN"
    },
    "((obj) => isFinite(obj))(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => isNaN(obj))(navigator.plugins[0])": {
        "returnValue": true
    },
    "((obj) => parseFloat(obj))(navigator.plugins[0])": {
        "returnValue": "NaN"
    },
    "((obj) => parseInt(obj))(navigator.plugins[0])": {
        "returnValue": "NaN"
    },
    "((obj) => obj === obj)(navigator.plugins[0])": {
        "returnValue": true
    },
    "((obj) => obj !== obj)(navigator.plugins[0])": {
        "returnValue": false
    },
    "((obj) => obj == obj)(navigator.plugins[0])": {
        "returnValue": true
    },
    "((obj) => obj != obj)(navigator.plugins[0])": {
        "returnValue": false
    },
    "navigator.plugins[5]": {
        "returnValue": 0
    },
    "Navigator.prototype.plugins": {
        "exception": "'get plugins' called on an object that does not implement interface Navigator."
    },
    "navigator.plugins[0] instanceof Plugin": {
        "returnValue": true
    },
    "navigator.plugins[1].__proto__ === Plugin.prototype": {
        "returnValue": true
    },
    "Object.getPrototypeOf(navigator.plugins[2]) ===  Plugin.prototype": {
        "returnValue": true
    },
    "navigator.plugins[3].prototype": {
        "returnValue": 0
    },
    "navigator.plugins[4].toString()": {
        "returnValue": "[object Plugin]"
    },
    "\"\" + navigator.plugins[0]": {
        "returnValue": "[object Plugin]"
    },
    "navigator.plugins[1] + \"\"": {
        "returnValue": "[object Plugin]"
    },
    "JSON.stringify(navigator.plugins[2])": {
        "returnValue": "{\"0\":{},\"1\":{}}"
    },
    "+navigator.plugins[3]": {
        "returnValue": "NaN"
    },
    "[...navigator.plugins[4]].length": {
        "returnValue": 2
    },
    "Object.getPrototypeOf([...navigator.plugins[0]][0]) ===\n                                                             MimeType.prototype": {
        "returnValue": true
    },
    "[...navigator.plugins[1]][1].type": {
        "returnValue": "text/pdf"
    },
    "({ ...navigator.plugins[2] })[0].type": {
        "returnValue": "application/pdf"
    },
    "({ ...navigator.plugins[3] })[1].type": {
        "returnValue": "text/pdf"
    },
    "navigator.plugins[2][0] === navigator.plugins[3][0]": {
        "returnValue": true
    },
    "navigator.plugins[4][0] !== navigator.plugins[4][1]": {
        "returnValue": true
    },
    "navigator.plugins[0][0] === navigator.mimeTypes[0]": {
        "returnValue": true
    },
    "navigator.plugins[1][1] === navigator.mimeTypes[1]": {
        "returnValue": true
    },
    "navigator.plugins[0][0].enabledPlugin ===\n                                          navigator.plugins[0][0].enabledPlugin": {
        "returnValue": true
    },
    "navigator.plugins[0][0].enabledPlugin ===\n                                          navigator.plugins[0][1].enabledPlugin": {
        "returnValue": true
    },
    "navigator.plugins[0][0].enabledPlugin ===\n                                          navigator.plugins[1][0].enabledPlugin": {
        "returnValue": true
    },
    "navigator.plugins[0][0].enabledPlugin ===\n                                          navigator.plugins[1][1].enabledPlugin": {
        "returnValue": true
    },
    "navigator.plugins[0][0].enabledPlugin ===\n                                           navigator.mimeTypes[0].enabledPlugin": {
        "returnValue": true
    },
    "navigator.plugins[0][0].enabledPlugin ===\n                                           navigator.mimeTypes[1].enabledPlugin": {
        "returnValue": true
    },
    "structuredClone(navigator.plugins[0])": {
        "exception": {
            "code": 25,
            "columnNumber": 0,
            "data": null,
            "lineNumber": 225,
            "message": "The object could not be cloned.",
            "name": "DataCloneError",
            "result": 2152923161
        }
    },
    "Object.getOwnPropertyNames(navigator.plugins)": {
        "returnValue": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "PDF Viewer",
            "Chrome PDF Viewer",
            "Chromium PDF Viewer",
            "Microsoft Edge PDF Viewer",
            "WebKit built-in PDF"
        ]
    },
    "Object.getOwnPropertySymbols(navigator.plugins)": {
        "returnValue": []
    },
    "Object.keys(Object.getOwnPropertyDescriptors(navigator.plugins))": {
        "returnValue": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "PDF Viewer",
            "Chrome PDF Viewer",
            "Chromium PDF Viewer",
            "Microsoft Edge PDF Viewer",
            "WebKit built-in PDF"
        ]
    },
    "Object.getOwnPropertyDescriptors(navigator.plugins)[\"0\"] !==\n                        Object.getOwnPropertyDescriptor(navigator.plugins, \"0\")": {
        "returnValue": true
    },
    "({\n        ...Object.getOwnPropertyDescriptors(navigator.plugins)[1],\n        value: Object.getOwnPropertyDescriptors(navigator.plugins)[0].value\n                                                              .constructor.name,\n    })": {
        "returnValue": {
            "value": "Plugin",
            "writable": false,
            "enumerable": true,
            "configurable": true
        }
    },
    "({\n        ...Object.getOwnPropertyDescriptors(navigator.plugins)[\"PDF Viewer\"],\n        value: Object.getOwnPropertyDescriptors(navigator.plugins)[\"PDF Viewer\"]\n                                                        .value.constructor.name,\n    })": {
        "returnValue": {
            "value": "Plugin",
            "writable": false,
            "enumerable": false,
            "configurable": true
        }
    },
    "navigator.plugins[1] ===\n                  Object.getOwnPropertyDescriptor(navigator.plugins, \"1\").value": {
        "returnValue": true
    },
    "navigator.plugins[0].item === navigator.plugins[0].item": {
        "returnValue": true
    },
    "navigator.plugins[1].namedItem === navigator.plugins[2].namedItem": {
        "returnValue": true
    },
    "navigator.mimeTypes[0].item === navigator.mimeTypes[0].item": {
        "returnValue": true
    },
    "navigator.mimeTypes[0].namedItem === navigator.mimeTypes[1].namedItem": {
        "returnValue": true
    },
    "navigator.plugins[0].item !== navigator.mimeTypes[0].item": {
        "returnValue": true
    },
    "navigator.plugins[0][0].namedItem ===\n                                               navigator.mimeTypes[0].namedItem": {
        "returnValue": true
    },
    "navigator.plugins.item(0) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(1) === navigator.plugins[1]": {
        "returnValue": true
    },
    "navigator.plugins.item(5)": {
        "returnValue": null
    },
    "navigator.plugins.item(\"foo\") === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(\"Chrome PDF Viewer\") === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(null) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(undefined) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(-1)": {
        "returnValue": null
    },
    "navigator.plugins.item(0.9) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(4.9) === navigator.plugins[4]": {
        "returnValue": true
    },
    "navigator.plugins.item(5.9)": {
        "returnValue": null
    },
    "navigator.plugins.item(-0.9) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(-1.9)": {
        "returnValue": null
    },
    "navigator.plugins.item(Infinity) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(Number.EPSILON) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(Number.NaN) === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.item(Number.NEGATIVE_INFINITY) ===\n                                                           navigator.plugins[0]": {
        "returnValue": true
    },
    "Plugin.prototype.item(0)": {
        "exception": "'item' called on an object that does not implement interface Plugin."
    },
    "navigator.plugins.item.caller": {
        "exception": "'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them"
    },
    "navigator.plugins.item.callee": {
        "returnValue": 0
    },
    "navigator.plugins.item.arguments": {
        "exception": "'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them"
    },
    "navigator.plugins.namedItem(\"PDF Viewer\") === navigator.plugins[0]": {
        "returnValue": true
    },
    "navigator.plugins.namedItem(\"WebKit built-in PDF\") ===\n                                                           navigator.plugins[4]": {
        "returnValue": true
    },
    "((index) => navigator.plugins.namedItem(index))([\"foo\"])": {
        "returnValue": null
    },
    "((index) => navigator.plugins.namedItem(index))([\"\"])": {
        "returnValue": null
    },
    "((index) => navigator.plugins.namedItem(index))([\"0\"])": {
        "returnValue": null
    },
    "((index) => navigator.plugins.namedItem(index))([0])": {
        "returnValue": null
    },
    "((index) => navigator.plugins.namedItem(index))([NaN])": {
        "returnValue": null
    },
    "((index) => navigator.plugins.namedItem(index))([Infinity])": {
        "returnValue": null
    },
    "navigator.plugins.item.length": {
        "returnValue": 1
    },
    "navigator.plugins.item.toString()": {
        "returnValue": "function item() {\n    [native code]\n}"
    },
    "navigator.plugins.namedItem.length": {
        "returnValue": 1
    },
    "navigator.plugins.namedItem.toString()": {
        "returnValue": "function namedItem() {\n    [native code]\n}"
    },
    "typeof DeviceMotionEvent": {
        "returnValue": "function"
    },
    "typeof DeviceMotionEvent.requestPermission": {
        "returnValue": "undefined"
    },
    "{\n        const canvas = document.createElement(\"canvas\");\n        const webGL = canvas.getContext(\"webgl\");\n        const astc = webGL.getExtension(\"WEBGL_compressed_texture_astc\");\n        return astc.getSupportedProfiles().toString();\n    }": {
        "returnValue": "ldr"
    },
    "CSS.supports(\"backdrop-filter\", \"blur(2px)\")": {
        "returnValue": false
    },
    "matchMedia(\"(prefers-color-scheme: dark)\").matches": {
        "returnValue": false
    },
    "navigator.deviceMemory": {
        "returnValue": 0
    },
    "document.documentElement.getAttributeNames()": {
        "returnValue": [
            "lang"
        ]
    },
    "getAllPropertyNames(document)": {
        "returnValue": [
            "location",
            "constructor",
            "getElementsByTagName",
            "getElementsByTagNameNS",
            "getElementsByClassName",
            "getElementById",
            "createElement",
            "createElementNS",
            "createDocumentFragment",
            "createTextNode",
            "createComment",
            "createProcessingInstruction",
            "importNode",
            "adoptNode",
            "createEvent",
            "createRange",
            "createNodeIterator",
            "createTreeWalker",
            "createCDATASection",
            "createAttribute",
            "createAttributeNS",
            "getElementsByName",
            "open",
            "close",
            "write",
            "writeln",
            "hasFocus",
            "execCommand",
            "queryCommandEnabled",
            "queryCommandIndeterm",
            "queryCommandState",
            "queryCommandSupported",
            "queryCommandValue",
            "releaseCapture",
            "mozSetImageElement",
            "clear",
            "captureEvents",
            "releaseEvents",
            "exitFullscreen",
            "mozCancelFullScreen",
            "exitPointerLock",
            "enableStyleSheetsForSet",
            "caretPositionFromPoint",
            "querySelector",
            "querySelectorAll",
            "getSelection",
            "hasStorageAccess",
            "requestStorageAccess",
            "elementFromPoint",
            "elementsFromPoint",
            "getAnimations",
            "prepend",
            "append",
            "replaceChildren",
            "createExpression",
            "createNSResolver",
            "evaluate",
            "implementation",
            "URL",
            "documentURI",
            "compatMode",
            "characterSet",
            "charset",
            "inputEncoding",
            "contentType",
            "doctype",
            "documentElement",
            "domain",
            "referrer",
            "cookie",
            "lastModified",
            "readyState",
            "title",
            "dir",
            "body",
            "head",
            "images",
            "embeds",
            "plugins",
            "links",
            "forms",
            "scripts",
            "defaultView",
            "designMode",
            "onreadystatechange",
            "onbeforescriptexecute",
            "onafterscriptexecute",
            "currentScript",
            "fgColor",
            "linkColor",
            "vlinkColor",
            "alinkColor",
            "bgColor",
            "anchors",
            "applets",
            "all",
            "fullscreen",
            "mozFullScreen",
            "fullscreenEnabled",
            "mozFullScreenEnabled",
            "onfullscreenchange",
            "onfullscreenerror",
            "onpointerlockchange",
            "onpointerlockerror",
            "hidden",
            "visibilityState",
            "onvisibilitychange",
            "selectedStyleSheetSet",
            "lastStyleSheetSet",
            "preferredStyleSheetSet",
            "styleSheetSets",
            "scrollingElement",
            "timeline",
            "rootElement",
            "oncopy",
            "oncut",
            "onpaste",
            "activeElement",
            "styleSheets",
            "pointerLockElement",
            "fullscreenElement",
            "mozFullScreenElement",
            "fonts",
            "onabort",
            "onblur",
            "onfocus",
            "onauxclick",
            "onbeforeinput",
            "oncanplay",
            "oncanplaythrough",
            "onchange",
            "onclick",
            "onclose",
            "oncontextmenu",
            "oncuechange",
            "ondblclick",
            "ondrag",
            "ondragend",
            "ondragenter",
            "ondragexit",
            "ondragleave",
            "ondragover",
            "ondragstart",
            "ondrop",
            "ondurationchange",
            "onemptied",
            "onended",
            "onformdata",
            "oninput",
            "oninvalid",
            "onkeydown",
            "onkeypress",
            "onkeyup",
            "onload",
            "onloadeddata",
            "onloadedmetadata",
            "onloadend",
            "onloadstart",
            "onmousedown",
            "onmouseenter",
            "onmouseleave",
            "onmousemove",
            "onmouseout",
            "onmouseover",
            "onmouseup",
            "onwheel",
            "onpause",
            "onplay",
            "onplaying",
            "onprogress",
            "onratechange",
            "onreset",
            "onresize",
            "onscroll",
            "onsecuritypolicyviolation",
            "onseeked",
            "onseeking",
            "onselect",
            "onslotchange",
            "onstalled",
            "onsubmit",
            "onsuspend",
            "ontimeupdate",
            "onvolumechange",
            "onwaiting",
            "onselectstart",
            "onselectionchange",
            "ontoggle",
            "onpointercancel",
            "onpointerdown",
            "onpointerup",
            "onpointermove",
            "onpointerout",
            "onpointerover",
            "onpointerenter",
            "onpointerleave",
            "ongotpointercapture",
            "onlostpointercapture",
            "onmozfullscreenchange",
            "onmozfullscreenerror",
            "onanimationcancel",
            "onanimationend",
            "onanimationiteration",
            "onanimationstart",
            "ontransitioncancel",
            "ontransitionend",
            "ontransitionrun",
            "ontransitionstart",
            "onwebkitanimationend",
            "onwebkitanimationiteration",
            "onwebkitanimationstart",
            "onwebkittransitionend",
            "onerror",
            "children",
            "firstElementChild",
            "lastElementChild",
            "childElementCount",
            "constructor",
            "getRootNode",
            "hasChildNodes",
            "insertBefore",
            "appendChild",
            "replaceChild",
            "removeChild",
            "normalize",
            "cloneNode",
            "isSameNode",
            "isEqualNode",
            "compareDocumentPosition",
            "contains",
            "lookupPrefix",
            "lookupNamespaceURI",
            "isDefaultNamespace",
            "nodeType",
            "nodeName",
            "baseURI",
            "isConnected",
            "ownerDocument",
            "parentNode",
            "parentElement",
            "childNodes",
            "firstChild",
            "lastChild",
            "previousSibling",
            "nextSibling",
            "nodeValue",
            "textContent",
            "ELEMENT_NODE",
            "ATTRIBUTE_NODE",
            "TEXT_NODE",
            "CDATA_SECTION_NODE",
            "ENTITY_REFERENCE_NODE",
            "ENTITY_NODE",
            "PROCESSING_INSTRUCTION_NODE",
            "COMMENT_NODE",
            "DOCUMENT_NODE",
            "DOCUMENT_TYPE_NODE",
            "DOCUMENT_FRAGMENT_NODE",
            "NOTATION_NODE",
            "DOCUMENT_POSITION_DISCONNECTED",
            "DOCUMENT_POSITION_PRECEDING",
            "DOCUMENT_POSITION_FOLLOWING",
            "DOCUMENT_POSITION_CONTAINS",
            "DOCUMENT_POSITION_CONTAINED_BY",
            "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
            "constructor",
            "addEventListener",
            "removeEventListener",
            "dispatchEvent",
            "constructor",
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "__defineGetter__",
            "__defineSetter__",
            "__lookupGetter__",
            "__lookupSetter__",
            "__proto__",
            "constructor"
        ]
    },
    "matchMedia(\"(-webkit-min-device-pixel-ratio: 2),\" +\n                     \" (min-device-pixel-ratio: 2),\" +\n                     \" (min-resolution: 192dpi)\").matches": {
        "returnValue": false
    },
    "{\n        const buf = new ArrayBuffer(4);\n        new Uint32Array(buf)[0] = 0xaa000000;\n        return new Uint8Array(buf)[0];\n    }": {
        "returnValue": 0
    },
    "{\n        try {\n            throw \"foo\";\n        } catch (err) {\n            try {\n                err.toSource();\n                return true;\n            } catch {\n                return false;\n            }\n        }\n    }": {
        "returnValue": false
    },
    "eval.toString()": {
        "returnValue": "function eval() {\n    [native code]\n}"
    },
    "{\n        const now = () => performance.now() / 1000;\n        const gcd = (a, b) => {\n            if (a < 0.00000001) {\n                return b;\n            }\n            if (a < b) {\n                return gcd(b - Math.floor(b / a) * a, a);\n            } else if (a === b) {\n                return a;\n            } else {\n                return gcd(b, a);\n            }\n        };\n\n        const x = now();\n        let g = now() - x;\n        for (let i = 0; i < 10; i++) {\n            g = gcd(g, now() - x);\n        }\n        return Math.round(1 / g);\n    }": {
        "returnValue": "Infinity"
    },
    "{\n        const div = document.createElement(\"div\");\n        div.style.border = \".5px dotted transparent\";\n        document.body.appendChild(div);\n        const offsetHeight = div.offsetHeight;\n        document.body.removeChild(div);\n        return [devicePixelRatio, offsetHeight];\n    }": {
        "returnValue": [
            1.25,
            2
        ]
    },
    "{\n        const concurrency = navigator.hardwareConcurrency;\n        if (typeof concurrency === \"string\") {\n            const concurrencyInt = Number.parseInt(concurrency);\n            return Number.isNaN(concurrencyInt) ? 1\n                                                : concurrencyInt;\n        }\n        return concurrency;\n    }": {
        "returnValue": 8
    },
    "InstallTrigger": {
        "returnValue": {}
    },
    "Object.getPrototypeOf(navigator.mimeTypes) ===\n                                                        MimeTypeArray.prototype": {
        "returnValue": true
    },
    "Array.from(navigator.mimeTypes).map((mimeType) => {\n        return Object.getPrototypeOf(mimeType) === MimeType.prototype;\n    })": {
        "returnValue": [
            true,
            true
        ]
    },
    "getAllPropertyNames(navigator)": {
        "returnValue": [
            "vibrate",
            "javaEnabled",
            "getGamepads",
            "mozGetUserMedia",
            "sendBeacon",
            "requestMediaKeySystemAccess",
            "registerProtocolHandler",
            "taintEnabled",
            "permissions",
            "mimeTypes",
            "plugins",
            "pdfViewerEnabled",
            "doNotTrack",
            "maxTouchPoints",
            "mediaCapabilities",
            "oscpu",
            "vendor",
            "vendorSub",
            "productSub",
            "cookieEnabled",
            "buildID",
            "mediaDevices",
            "serviceWorker",
            "credentials",
            "clipboard",
            "mediaSession",
            "webdriver",
            "hardwareConcurrency",
            "geolocation",
            "appCodeName",
            "appName",
            "appVersion",
            "platform",
            "userAgent",
            "product",
            "language",
            "languages",
            "locks",
            "onLine",
            "storage",
            "constructor",
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "__defineGetter__",
            "__defineSetter__",
            "__lookupGetter__",
            "__lookupSetter__",
            "__proto__",
            "constructor"
        ]
    },
    "async () => {\n        const permission = await navigator.permissions.query({\n            name: \"notifications\",\n        });\n        return [Notification.permission, permission.state];\n    }": {
        "returnValue": [
            "default",
            "prompt"
        ]
    },
    "navigator.oscpu": {
        "returnValue": "Linux x86_64"
    },
    "Object.getPrototypeOf(navigator.plugins) === PluginArray.prototype": {
        "returnValue": true
    },
    "Array.from(navigator.plugins).map((plugin) => {\n        return Object.getPrototypeOf(plugin) === Plugin.prototype;\n    })": {
        "returnValue": [
            true,
            true,
            true,
            true,
            true
        ]
    },
    "navigator.productSub": {
        "returnValue": "20100101"
    },
    "navigator.connection.rtt": {
        "exception": "navigator.connection is undefined"
    },
    "new SharedArrayBuffer(1).byteLength": {
        "exception": "SharedArrayBuffer is not defined"
    },
    "screen.width": {
        "returnValue": 1536
    },
    "screen.height": {
        "returnValue": 864
    },
    "typeof SourceBuffer": {
        "returnValue": "function"
    },
    "typeof SourceBufferList": {
        "returnValue": "function"
    },
    "navigator.maxTouchPoints": {
        "returnValue": 0
    },
    "navigator.msMaxTouchPoints": {
        "returnValue": 0
    },
    "navigator.vendor": {
        "returnValue": ""
    },
    "navigator.webdriver": {
        "returnValue": false
    },
    "{\n        const canvasElement = document.createElement('canvas')\n        const webGLContext = canvasElement.getContext('webgl')\n        const vendor = webGLContext.getParameter(webGLContext.VENDOR)\n        const renderer = webGLContext.getParameter(webGLContext.RENDERER)\n        const version = webGLContext.getParameter(webGLContext.VERSION)\n        if (InstallTrigger !== undefined) {\n            return [vendor, renderer, version]\n        }\n        const webGLDebugInfo = webGLContext.getExtension('WEBGL_debug_renderer_info')\n        const unmaskedVendor = webGLContext.getParameter(webGLDebugInfo.UNMASKED_VENDOR_WEBGL)\n        const unmaskedRenderer = webGLContext.getParameter(webGLDebugInfo.UNMASKED_RENDERER_WEBGL)\n        return [unmaskedVendor, unmaskedRenderer, vendor, renderer, version]\n    }": {
        "returnValue": [
            "Mozilla",
            "Intel(R) HD Graphics 400",
            "WebGL 1.0"
        ]
    },
    "close.toString()": {
        "returnValue": "function close() {\n    [native code]\n}"
    },
    "external.toString()": {
        "returnValue": "[object External]"
    },
    "outerWidth": {
        "returnValue": 1491
    },
    "outerHeight": {
        "returnValue": 837
    },
    "getAllPropertyNames(window)": {
        "returnValue": [
            "undefined",
            "globalThis",
            "Date",
            "AggregateError",
            "BigInt64Array",
            "BigUint64Array",
            "Proxy",
            "WeakMap",
            "Reflect",
            "WeakSet",
            "Atomics",
            "WebAssembly",
            "FinalizationRegistry",
            "WeakRef",
            "SVGFEDropShadowElement",
            "SVGClipPathElement",
            "Worklet",
            "CSSCounterStyleRule",
            "Response",
            "CSSRuleList",
            "CSSSupportsRule",
            "DocumentType",
            "HTMLHeadingElement",
            "CSSRule",
            "HTMLDirectoryElement",
            "RTCStatsReport",
            "ScreenOrientation",
            "ChannelSplitterNode",
            "FileList",
            "PushSubscriptionOptions",
            "ReadableStream",
            "IDBKeyRange",
            "CSSMediaRule",
            "HTMLDialogElement",
            "HTMLTextAreaElement",
            "MediaList",
            "WebGLBuffer",
            "ResizeObserver",
            "mozRTCSessionDescription",
            "Worker",
            "IdleDeadline",
            "SVGAnimatedNumber",
            "PopupBlockedEvent",
            "HTMLImageElement",
            "XPathEvaluator",
            "VideoPlaybackQuality",
            "PublicKeyCredential",
            "MouseScrollEvent",
            "SVGStyleElement",
            "SVGAnimateMotionElement",
            "PopStateEvent",
            "MessageChannel",
            "XMLHttpRequestEventTarget",
            "CanvasPattern",
            "FocusEvent",
            "DOMParser",
            "HTMLPictureElement",
            "CanvasGradient",
            "TextMetrics",
            "ImageData",
            "AudioProcessingEvent",
            "HashChangeEvent",
            "SVGFilterElement",
            "ScrollAreaEvent",
            "SVGTextElement",
            "SVGGraphicsElement",
            "WebGLTexture",
            "History",
            "HTMLOptionsCollection",
            "TextTrackList",
            "SVGCircleElement",
            "HTMLDataElement",
            "Storage",
            "HTMLMeterElement",
            "HTMLParagraphElement",
            "SVGTSpanElement",
            "ElementInternals",
            "MediaStreamTrackEvent",
            "WebGLTransformFeedback",
            "DOMImplementation",
            "AnimationEffect",
            "AudioWorklet",
            "PerformanceServerTiming",
            "SpeechSynthesisErrorEvent",
            "GamepadEvent",
            "HTMLSlotElement",
            "PerformanceResourceTiming",
            "SVGViewElement",
            "MessagePort",
            "WebKitCSSMatrix",
            "ProgressEvent",
            "SharedWorker",
            "CredentialsContainer",
            "PointerEvent",
            "SVGStringList",
            "HTMLVideoElement",
            "WebGLFramebuffer",
            "SVGLengthList",
            "mozRTCPeerConnection",
            "IntersectionObserver",
            "WebGLQuery",
            "SVGFEColorMatrixElement",
            "DataTransfer",
            "FileSystemDirectoryEntry",
            "HTMLTableRowElement",
            "HTMLInputElement",
            "WebGLSync",
            "AbstractRange",
            "SVGAnimateTransformElement",
            "RTCSessionDescription",
            "HTMLFrameSetElement",
            "StorageEvent",
            "MediaError",
            "SVGAnimatedAngle",
            "MediaKeyStatusMap",
            "ProcessingInstruction",
            "ResizeObserverEntry",
            "SVGAngle",
            "StyleSheetList",
            "OscillatorNode",
            "XMLHttpRequest",
            "WebGLShader",
            "SVGTextPositioningElement",
            "IDBObjectStore",
            "BiquadFilterNode",
            "ByteLengthQueuingStrategy",
            "Geolocation",
            "AnimationTimeline",
            "ImageBitmapRenderingContext",
            "RTCDTMFToneChangeEvent",
            "MutationObserver",
            "HTMLTableCellElement",
            "ClipboardEvent",
            "DOMRequest",
            "SVGFEFuncAElement",
            "HTMLStyleElement",
            "FileSystemDirectoryReader",
            "WebSocket",
            "SVGSwitchElement",
            "KeyboardEvent",
            "HTMLButtonElement",
            "FontFaceSet",
            "Credential",
            "RTCDtlsTransport",
            "KeyframeEffect",
            "SVGAnimatedBoolean",
            "SVGAElement",
            "BroadcastChannel",
            "GamepadButton",
            "MediaEncryptedEvent",
            "RTCDataChannelEvent",
            "HTMLIFrameElement",
            "AbortSignal",
            "LockManager",
            "U2F",
            "MediaCapabilities",
            "AudioParam",
            "SVGFESpotLightElement",
            "GamepadPose",
            "HTMLLIElement",
            "WebGLContextEvent",
            "CaretPosition",
            "SVGFEOffsetElement",
            "File",
            "SVGForeignObjectElement",
            "DOMRect",
            "SVGPreserveAspectRatio",
            "IntersectionObserverEntry",
            "SVGAnimatedPreserveAspectRatio",
            "FileSystemEntry",
            "SpeechSynthesisVoice",
            "ResizeObserverSize",
            "SVGSetElement",
            "SVGFEImageElement",
            "ChannelMergerNode",
            "RTCCertificate",
            "TimeEvent",
            "EventSource",
            "CSSPageRule",
            "SVGLinearGradientElement",
            "PeriodicWave",
            "Headers",
            "MediaStreamTrack",
            "NavigationPreloadManager",
            "ImageBitmap",
            "MediaStreamAudioSourceNode",
            "PaintRequest",
            "CacheStorage",
            "CSSLayerBlockRule",
            "SpeechSynthesisEvent",
            "HTMLTitleElement",
            "ServiceWorkerRegistration",
            "PushManager",
            "StereoPannerNode",
            "FormDataEvent",
            "Directory",
            "HTMLSelectElement",
            "HTMLLabelElement",
            "PaintRequestList",
            "AuthenticatorAssertionResponse",
            "OfflineAudioCompletionEvent",
            "CryptoKey",
            "HTMLSpanElement",
            "CSSImportRule",
            "DocumentTimeline",
            "Gamepad",
            "PerformanceObserverEntryList",
            "SVGAnimatedRect",
            "HTMLDetailsElement",
            "AudioBufferSourceNode",
            "OfflineResourceList",
            "SVGLength",
            "DataTransferItem",
            "CanvasCaptureMediaStream",
            "IDBVersionChangeEvent",
            "SVGPolygonElement",
            "WebGLVertexArrayObject",
            "HTMLTimeElement",
            "PerformanceNavigation",
            "TextDecoder",
            "IDBFileHandle",
            "CharacterData",
            "GeolocationPositionError",
            "SVGDescElement",
            "CompositionEvent",
            "IDBCursor",
            "HTMLHRElement",
            "RTCRtpSender",
            "MediaSource",
            "TextTrack",
            "AudioParamMap",
            "DOMPointReadOnly",
            "MediaSession",
            "AbortController",
            "MediaRecorder",
            "HTMLFieldSetElement",
            "StyleSheet",
            "SVGUseElement",
            "BlobEvent",
            "MessageEvent",
            "IDBIndex",
            "SVGRadialGradientElement",
            "FontFace",
            "SVGStopElement",
            "HTMLCollection",
            "ConstantSourceNode",
            "SVGAnimatedLengthList",
            "SVGFEDisplacementMapElement",
            "MouseEvent",
            "ValidityState",
            "NodeIterator",
            "SVGGeometryElement",
            "AnimationEvent",
            "TextTrackCueList",
            "UIEvent",
            "XMLHttpRequestUpload",
            "TextEncoder",
            "CSSNamespaceRule",
            "CSSFontFeatureValuesRule",
            "PushSubscription",
            "GamepadHapticActuator",
            "ScriptProcessorNode",
            "GeolocationCoordinates",
            "SVGPathElement",
            "MathMLElement",
            "RTCPeerConnection",
            "IDBDatabase",
            "DragEvent",
            "DataTransferItemList",
            "WebGLUniformLocation",
            "AnalyserNode",
            "NodeFilter",
            "SVGRect",
            "WebGL2RenderingContext",
            "MediaDeviceInfo",
            "SVGFEFuncBElement",
            "mozRTCIceCandidate",
            "TimeRanges",
            "SVGMPathElement",
            "SVGAnimatedString",
            "CDATASection",
            "SVGSVGElement",
            "XPathResult",
            "PannerNode",
            "MediaKeyMessageEvent",
            "Attr",
            "StorageManager",
            "SVGFEDiffuseLightingElement",
            "BeforeUnloadEvent",
            "XMLDocument",
            "PerformanceObserver",
            "HTMLTemplateElement",
            "HTMLAudioElement",
            "MediaKeys",
            "SVGComponentTransferFunctionElement",
            "Lock",
            "VisualViewport",
            "OfflineAudioContext",
            "SVGFEFuncGElement",
            "Comment",
            "HTMLAllCollection",
            "BarProp",
            "HTMLBRElement",
            "HTMLScriptElement",
            "SVGFEComponentTransferElement",
            "SVGLineElement",
            "MediaCapabilitiesInfo",
            "Notification",
            "FontFaceSetLoadEvent",
            "PromiseRejectionEvent",
            "Cache",
            "HTMLBaseElement",
            "RTCPeerConnectionIceEvent",
            "WheelEvent",
            "SVGPatternElement",
            "SVGTextContentElement",
            "CloseEvent",
            "PerformanceEventTiming",
            "HTMLEmbedElement",
            "IDBFileRequest",
            "SVGFEMergeNodeElement",
            "SVGPointList",
            "AuthenticatorAttestationResponse",
            "RTCDataChannel",
            "SVGAnimatedNumberList",
            "CSSMozDocumentRule",
            "AudioDestinationNode",
            "SVGMarkerElement",
            "HTMLTableSectionElement",
            "RTCRtpTransceiver",
            "SVGFEMorphologyElement",
            "SVGPoint",
            "WebGLSampler",
            "MediaQueryListEvent",
            "FileReader",
            "MediaStreamTrackAudioSourceNode",
            "Request",
            "RTCRtpReceiver",
            "Option",
            "Selection",
            "HTMLUListElement",
            "CSSAnimation",
            "AudioScheduledSourceNode",
            "HTMLOListElement",
            "HTMLLegendElement",
            "TreeWalker",
            "ServiceWorkerContainer",
            "MediaRecorderErrorEvent",
            "Clipboard",
            "HTMLObjectElement",
            "SVGTransformList",
            "HTMLDataListElement",
            "MediaKeyError",
            "HTMLTrackElement",
            "CSSGroupingRule",
            "IDBOpenDBRequest",
            "IDBMutableFile",
            "MediaStream",
            "Blob",
            "MediaKeySession",
            "DelayNode",
            "SubmitEvent",
            "HTMLTableCaptionElement",
            "SVGTransform",
            "CustomEvent",
            "HTMLUnknownElement",
            "DOMMatrix",
            "Text",
            "ServiceWorker",
            "DeviceOrientationEvent",
            "CSSStyleRule",
            "ShadowRoot",
            "SVGNumber",
            "MediaKeySystemAccess",
            "WebGLShaderPrecisionFormat",
            "Animation",
            "PerformanceNavigationTiming",
            "SVGPolylineElement",
            "SVGFEFloodElement",
            "DOMStringList",
            "TrackEvent",
            "DOMQuad",
            "CustomElementRegistry",
            "SVGAnimatedInteger",
            "DOMPoint",
            "HTMLMapElement",
            "CSSConditionRule",
            "SVGFETurbulenceElement",
            "HTMLProgressElement",
            "IDBCursorWithValue",
            "CountQueuingStrategy",
            "XMLSerializer",
            "SVGImageElement",
            "HTMLPreElement",
            "DOMStringMap",
            "HTMLDListElement",
            "RTCDTMFSender",
            "SVGFEGaussianBlurElement",
            "PageTransitionEvent",
            "AudioContext",
            "SVGScriptElement",
            "HTMLFontElement",
            "IIRFilterNode",
            "DocumentFragment",
            "SVGFETileElement",
            "SVGRectElement",
            "SVGFESpecularLightingElement",
            "SVGElement",
            "WebGLRenderbuffer",
            "SVGMaskElement",
            "SVGEllipseElement",
            "HTMLOptionElement",
            "RadioNodeList",
            "Audio",
            "ErrorEvent",
            "ConvolverNode",
            "WebGLProgram",
            "SVGFEConvolveMatrixElement",
            "SVGFEMergeElement",
            "HTMLTableElement",
            "RTCTrackEvent",
            "MediaDevices",
            "HTMLOutputElement",
            "GeolocationPosition",
            "SVGAnimatedTransformList",
            "HTMLModElement",
            "DynamicsCompressorNode",
            "HTMLMenuElement",
            "SVGFECompositeElement",
            "VTTCue",
            "InputEvent",
            "SVGMetadataElement",
            "CSSFontFaceRule",
            "SVGNumberList",
            "SVGUnitTypes",
            "TextTrackCue",
            "SpeechSynthesis",
            "HTMLFormControlsCollection",
            "AudioListener",
            "DOMRectList",
            "SVGTextPathElement",
            "PerformancePaintTiming",
            "NamedNodeMap",
            "CSSKeyframeRule",
            "SVGFEPointLightElement",
            "MediaStreamEvent",
            "IDBRequest",
            "MediaStreamAudioDestinationNode",
            "Range",
            "KeyEvent",
            "SecurityPolicyViolationEvent",
            "TransitionEvent",
            "HTMLFrameElement",
            "XPathExpression",
            "CSSLayerStatementRule",
            "HTMLAnchorElement",
            "CanvasRenderingContext2D",
            "AudioWorkletNode",
            "HTMLAreaElement",
            "SVGMatrix",
            "DOMMatrixReadOnly",
            "AudioBuffer",
            "SubtleCrypto",
            "RTCIceCandidate",
            "NodeList",
            "IDBTransaction",
            "SVGDefsElement",
            "SpeechSynthesisUtterance",
            "MediaElementAudioSourceNode",
            "console",
            "FileSystemFileEntry",
            "Image",
            "CSSStyleSheet",
            "GainNode",
            "HTMLTableColElement",
            "XSLTProcessor",
            "AuthenticatorResponse",
            "HTMLSourceElement",
            "BaseAudioContext",
            "PerformanceEntry",
            "HTMLMarqueeElement",
            "AudioNode",
            "SVGAnimatedLength",
            "VTTRegion",
            "SVGSymbolElement",
            "WebGLActiveInfo",
            "FileSystem",
            "SVGAnimationElement",
            "HTMLQuoteElement",
            "SVGTitleElement",
            "HTMLOptGroupElement",
            "MutationRecord",
            "AnimationPlaybackEvent",
            "SVGGradientElement",
            "MediaMetadata",
            "SVGFEBlendElement",
            "SVGFEFuncRElement",
            "SVGAnimatedEnumeration",
            "PerformanceMark",
            "PerformanceMeasure",
            "StaticRange",
            "SVGGElement",
            "DOMRectReadOnly",
            "FormData",
            "HTMLMediaElement",
            "HTMLParamElement",
            "WaveShaperNode",
            "CSSTransition",
            "CSSKeyframesRule",
            "IDBFactory",
            "MutationEvent",
            "HTMLFormElement",
            "SVGAnimateElement",
            "SVGFEDistantLightElement",
            "Path2D",
            "Function",
            "Object",
            "eval",
            "EventTarget",
            "Window",
            "close",
            "stop",
            "focus",
            "blur",
            "open",
            "alert",
            "confirm",
            "prompt",
            "print",
            "postMessage",
            "captureEvents",
            "releaseEvents",
            "getSelection",
            "getComputedStyle",
            "matchMedia",
            "moveTo",
            "moveBy",
            "resizeTo",
            "resizeBy",
            "scroll",
            "scrollTo",
            "scrollBy",
            "getDefaultComputedStyle",
            "scrollByLines",
            "scrollByPages",
            "sizeToContent",
            "updateCommands",
            "find",
            "dump",
            "setResizable",
            "requestIdleCallback",
            "cancelIdleCallback",
            "requestAnimationFrame",
            "cancelAnimationFrame",
            "reportError",
            "btoa",
            "atob",
            "setTimeout",
            "clearTimeout",
            "setInterval",
            "clearInterval",
            "queueMicrotask",
            "createImageBitmap",
            "structuredClone",
            "fetch",
            "self",
            "name",
            "history",
            "customElements",
            "locationbar",
            "menubar",
            "personalbar",
            "scrollbars",
            "statusbar",
            "toolbar",
            "status",
            "closed",
            "event",
            "frames",
            "length",
            "opener",
            "parent",
            "frameElement",
            "navigator",
            "clientInformation",
            "external",
            "applicationCache",
            "screen",
            "innerWidth",
            "innerHeight",
            "scrollX",
            "pageXOffset",
            "scrollY",
            "pageYOffset",
            "screenLeft",
            "screenTop",
            "screenX",
            "screenY",
            "outerWidth",
            "outerHeight",
            "performance",
            "mozInnerScreenX",
            "mozInnerScreenY",
            "devicePixelRatio",
            "scrollMaxX",
            "scrollMaxY",
            "fullScreen",
            "ondevicemotion",
            "ondeviceorientation",
            "onabsolutedeviceorientation",
            "content",
            "InstallTrigger",
            "sidebar",
            "visualViewport",
            "crypto",
            "onabort",
            "onblur",
            "onfocus",
            "onauxclick",
            "onbeforeinput",
            "oncanplay",
            "oncanplaythrough",
            "onchange",
            "onclick",
            "onclose",
            "oncontextmenu",
            "oncuechange",
            "ondblclick",
            "ondrag",
            "ondragend",
            "ondragenter",
            "ondragexit",
            "ondragleave",
            "ondragover",
            "ondragstart",
            "ondrop",
            "ondurationchange",
            "onemptied",
            "onended",
            "onformdata",
            "oninput",
            "oninvalid",
            "onkeydown",
            "onkeypress",
            "onkeyup",
            "onload",
            "onloadeddata",
            "onloadedmetadata",
            "onloadend",
            "onloadstart",
            "onmousedown",
            "onmouseenter",
            "onmouseleave",
            "onmousemove",
            "onmouseout",
            "onmouseover",
            "onmouseup",
            "onwheel",
            "onpause",
            "onplay",
            "onplaying",
            "onprogress",
            "onratechange",
            "onreset",
            "onresize",
            "onscroll",
            "onsecuritypolicyviolation",
            "onseeked",
            "onseeking",
            "onselect",
            "onslotchange",
            "onstalled",
            "onsubmit",
            "onsuspend",
            "ontimeupdate",
            "onvolumechange",
            "onwaiting",
            "onselectstart",
            "onselectionchange",
            "ontoggle",
            "onpointercancel",
            "onpointerdown",
            "onpointerup",
            "onpointermove",
            "onpointerout",
            "onpointerover",
            "onpointerenter",
            "onpointerleave",
            "ongotpointercapture",
            "onlostpointercapture",
            "onmozfullscreenchange",
            "onmozfullscreenerror",
            "onanimationcancel",
            "onanimationend",
            "onanimationiteration",
            "onanimationstart",
            "ontransitioncancel",
            "ontransitionend",
            "ontransitionrun",
            "ontransitionstart",
            "onwebkitanimationend",
            "onwebkitanimationiteration",
            "onwebkitanimationstart",
            "onwebkittransitionend",
            "u2f",
            "onerror",
            "speechSynthesis",
            "onafterprint",
            "onbeforeprint",
            "onbeforeunload",
            "onhashchange",
            "onlanguagechange",
            "onmessage",
            "onmessageerror",
            "onoffline",
            "ononline",
            "onpagehide",
            "onpageshow",
            "onpopstate",
            "onrejectionhandled",
            "onstorage",
            "onunhandledrejection",
            "onunload",
            "ongamepadconnected",
            "ongamepaddisconnected",
            "localStorage",
            "origin",
            "crossOriginIsolated",
            "isSecureContext",
            "indexedDB",
            "caches",
            "sessionStorage",
            "window",
            "document",
            "location",
            "top",
            "netscape",
            "Node",
            "Document",
            "HTMLDocument",
            "EventCounts",
            "Map",
            "Performance",
            "Event",
            "PerformanceTiming",
            "Location",
            "Element",
            "HTMLElement",
            "HTMLMetaElement",
            "HTMLLinkElement",
            "DOMTokenList",
            "HTMLHeadElement",
            "Array",
            "RegExp",
            "NotifyPaintEvent",
            "Promise",
            "Symbol",
            "Uint8Array",
            "ArrayBuffer",
            "escape",
            "unescape",
            "decodeURI",
            "encodeURI",
            "decodeURIComponent",
            "encodeURIComponent",
            "String",
            "BigInt",
            "Error",
            "TypeError",
            "RangeError",
            "SyntaxError",
            "ReferenceError",
            "EvalError",
            "URIError",
            "InternalError",
            "Boolean",
            "isNaN",
            "isFinite",
            "parseInt",
            "parseFloat",
            "NaN",
            "Infinity",
            "Number",
            "Int8Array",
            "Uint8ClampedArray",
            "Int16Array",
            "Uint16Array",
            "Int32Array",
            "Uint32Array",
            "Float32Array",
            "Float64Array",
            "Set",
            "DataView",
            "Intl",
            "Crypto",
            "URL",
            "webkitURL",
            "URLSearchParams",
            "Plugin",
            "Navigator",
            "PluginArray",
            "MimeTypeArray",
            "DOMException",
            "JSON",
            "MimeType",
            "DeviceMotionEvent",
            "HTMLCanvasElement",
            "WebGLRenderingContext",
            "CSS",
            "MediaQueryList",
            "HTMLHtmlElement",
            "Math",
            "HTMLDivElement",
            "CSSStyleDeclaration",
            "CSS2Properties",
            "HTMLBodyElement",
            "InstallTriggerImpl",
            "Permissions",
            "PermissionStatus",
            "Screen",
            "SourceBuffer",
            "SourceBufferList",
            "constructor",
            "addEventListener",
            "removeEventListener",
            "dispatchEvent",
            "constructor",
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "__defineGetter__",
            "__defineSetter__",
            "__lookupGetter__",
            "__lookupSetter__",
            "__proto__",
            "constructor"
        ]
    },
    "$types": {
        "Object~1getOwnPropertyDescriptor(Plugin~1prototype, \"version\").returnValue": "undef",
        "new SharedArrayBuffer().exception": "referenceerror",
        "((obj) => obj())(Function~1prototype).returnValue": "undef",
        "((obj) => new obj())(Function~1prototype).exception": "typeerror",
        "((obj) => obj~1prototype)(Function~1prototype).returnValue": "undef",
        "((obj) => Object~1entries(obj))(Function~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertyNames(obj))(Function~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(Function~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(Function~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(Function~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => [~1~1~1obj])(Function~1prototype).exception": "typeerror",
        "((obj) => Array~1from(obj))(Function~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1of(obj))(Function~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => JSON~1stringify(obj))(Function~1prototype).returnValue": "undef",
        "((obj) => structuredClone(obj))(Function~1prototype).exception": "DOMException",
        "((obj) => +obj)(Function~1prototype).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(Function~1prototype).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(Function~1prototype).returnValue": "nan",
        "((obj) => parseFloat(obj))(Function~1prototype).returnValue": "nan",
        "((obj) => parseInt(obj))(Function~1prototype).returnValue": "nan",
        "((obj) => obj())(Function~1prototype~1toString).exception": "typeerror",
        "((obj) => new obj())(Function~1prototype~1toString).exception": "typeerror",
        "((obj) => obj~1prototype)(Function~1prototype~1toString).returnValue": "undef",
        "((obj) => Object~1entries(obj))(Function~1prototype~1toString).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertyNames(obj))(Function~1prototype~1toString).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(Function~1prototype~1toString).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(Function~1prototype~1toString).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(Function~1prototype~1toString).returnValue": "arrayNonindexKeys",
        "((obj) => [~1~1~1obj])(Function~1prototype~1toString).exception": "typeerror",
        "((obj) => Array~1from(obj))(Function~1prototype~1toString).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1of(obj))(Function~1prototype~1toString).returnValue": "arrayNonindexKeys",
        "((obj) => JSON~1stringify(obj))(Function~1prototype~1toString).returnValue": "undef",
        "((obj) => structuredClone(obj))(Function~1prototype~1toString).exception": "DOMException",
        "((obj) => +obj)(Function~1prototype~1toString).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(Function~1prototype~1toString).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(Function~1prototype~1toString).returnValue": "nan",
        "((obj) => parseFloat(obj))(Function~1prototype~1toString).returnValue": "nan",
        "((obj) => parseInt(obj))(Function~1prototype~1toString).returnValue": "nan",
        "((obj) => obj())(navigator).exception": "typeerror",
        "((obj) => new obj())(navigator).exception": "typeerror",
        "((obj) => obj~1prototype)(navigator).returnValue": "undef",
        "((obj) => Object~1entries(obj))(navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertyNames(obj))(navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(navigator).returnValue": "arrayNonindexKeys",
        "((obj) => [~1~1~1obj])(navigator).exception": "typeerror",
        "((obj) => Array~1from(obj))(navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1of(obj))(navigator).returnValue": "arrayNonindexKeys",
        "((obj) => structuredClone(obj))(navigator).exception": "DOMException",
        "((obj) => +obj)(navigator).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(navigator).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(navigator).returnValue": "nan",
        "((obj) => parseFloat(obj))(navigator).returnValue": "nan",
        "((obj) => parseInt(obj))(navigator).returnValue": "nan",
        "((obj) => obj())(Object~1getPrototypeOf(navigator)).exception": "typeerror",
        "((obj) => new obj())(Object~1getPrototypeOf(navigator)).exception": "typeerror",
        "((obj) => obj~1prototype)(Object~1getPrototypeOf(navigator)).returnValue": "undef",
        "((obj) => Object~1entries(obj))(Object~1getPrototypeOf(navigator)).exception": "typeerror",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.permissions.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.mimeTypes.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.plugins.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.pdfViewerEnabled.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.doNotTrack.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.maxTouchPoints.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.mediaCapabilities.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.oscpu.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.vendor.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.vendorSub.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.productSub.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.cookieEnabled.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.buildID.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.mediaDevices.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.serviceWorker.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.credentials.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.clipboard.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.mediaSession.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.webdriver.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.hardwareConcurrency.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.geolocation.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.appCodeName.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.appName.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.appVersion.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.platform.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.userAgent.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.product.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.language.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.languages.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.locks.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.onLine.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator)).returnValue.storage.set": "undef",
        "((obj) => Object~1getOwnPropertyNames(obj))(Object~1getPrototypeOf(navigator)).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(Object~1getPrototypeOf(navigator)).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(Object~1getPrototypeOf(navigator)).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(Object~1getPrototypeOf(navigator)).exception": "typeerror",
        "((obj) => [~1~1~1obj])(Object~1getPrototypeOf(navigator)).exception": "typeerror",
        "((obj) => ({~1~1~1obj}))(Object~1getPrototypeOf(navigator)).exception": "typeerror",
        "((obj) => Array~1from(obj))(Object~1getPrototypeOf(navigator)).returnValue": "arrayNonindexKeys",
        "((obj) => JSON~1stringify(obj))(Object~1getPrototypeOf(navigator)).exception": "typeerror",
        "((obj) => structuredClone(obj))(Object~1getPrototypeOf(navigator)).exception": "DOMException",
        "((obj) => +obj)(Object~1getPrototypeOf(navigator)).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(Object~1getPrototypeOf(navigator)).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(Object~1getPrototypeOf(navigator)).returnValue": "nan",
        "((obj) => parseFloat(obj))(Object~1getPrototypeOf(navigator)).returnValue": "nan",
        "((obj) => parseInt(obj))(Object~1getPrototypeOf(navigator)).returnValue": "nan",
        "((obj) => obj())(Navigator).exception": "typeerror",
        "((obj) => new obj())(Navigator).exception": "typeerror",
        "((obj) => Object~1entries(obj))(Navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertyNames(obj))(Navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(Navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(Navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(Navigator).returnValue": "arrayNonindexKeys",
        "((obj) => [~1~1~1obj])(Navigator).exception": "typeerror",
        "((obj) => Array~1from(obj))(Navigator).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1of(obj))(Navigator).returnValue": "arrayNonindexKeys",
        "((obj) => JSON~1stringify(obj))(Navigator).returnValue": "undef",
        "((obj) => structuredClone(obj))(Navigator).exception": "DOMException",
        "((obj) => +obj)(Navigator).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(Navigator).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(Navigator).returnValue": "nan",
        "((obj) => parseFloat(obj))(Navigator).returnValue": "nan",
        "((obj) => parseInt(obj))(Navigator).returnValue": "nan",
        "((obj) => obj())(Navigator~1prototype).exception": "typeerror",
        "((obj) => new obj())(Navigator~1prototype).exception": "typeerror",
        "((obj) => obj~1prototype)(Navigator~1prototype).returnValue": "undef",
        "((obj) => Object~1entries(obj))(Navigator~1prototype).exception": "typeerror",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.permissions.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.mimeTypes.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.plugins.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.pdfViewerEnabled.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.doNotTrack.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.maxTouchPoints.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.mediaCapabilities.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.oscpu.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.vendor.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.vendorSub.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.productSub.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.cookieEnabled.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.buildID.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.mediaDevices.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.serviceWorker.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.credentials.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.clipboard.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.mediaSession.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.webdriver.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.hardwareConcurrency.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.geolocation.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.appCodeName.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.appName.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.appVersion.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.platform.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.userAgent.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.product.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.language.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.languages.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.locks.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.onLine.set": "undef",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Navigator~1prototype).returnValue.storage.set": "undef",
        "((obj) => Object~1getOwnPropertyNames(obj))(Navigator~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(Navigator~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(Navigator~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(Navigator~1prototype).exception": "typeerror",
        "((obj) => [~1~1~1obj])(Navigator~1prototype).exception": "typeerror",
        "((obj) => ({~1~1~1obj}))(Navigator~1prototype).exception": "typeerror",
        "((obj) => Array~1from(obj))(Navigator~1prototype).returnValue": "arrayNonindexKeys",
        "((obj) => JSON~1stringify(obj))(Navigator~1prototype).exception": "typeerror",
        "((obj) => structuredClone(obj))(Navigator~1prototype).exception": "DOMException",
        "((obj) => +obj)(Navigator~1prototype).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(Navigator~1prototype).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(Navigator~1prototype).returnValue": "nan",
        "((obj) => parseFloat(obj))(Navigator~1prototype).returnValue": "nan",
        "((obj) => parseInt(obj))(Navigator~1prototype).returnValue": "nan",
        "((obj) => obj)(navigator~1plugins).returnValue.1.0": "#",
        "((obj) => obj)(navigator~1plugins).returnValue.1.1": "#",
        "((obj) => obj)(navigator~1plugins).returnValue.2.0": "#",
        "((obj) => obj)(navigator~1plugins).returnValue.2.1": "#",
        "((obj) => obj)(navigator~1plugins).returnValue.3.0": "#",
        "((obj) => obj)(navigator~1plugins).returnValue.3.1": "#",
        "((obj) => obj)(navigator~1plugins).returnValue.4.0": "#",
        "((obj) => obj)(navigator~1plugins).returnValue.4.1": "#",
        "((obj) => obj())(navigator~1plugins).exception": "typeerror",
        "((obj) => new obj())(navigator~1plugins).exception": "typeerror",
        "((obj) => obj~1prototype)(navigator~1plugins).returnValue": "undef",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.0": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.1": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.1.1.0": "#",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.1.1.1": "#",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.2": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.2.1.0": "#",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.2.1.1": "#",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.3": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.3.1.0": "#",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.3.1.1": "#",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.4": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.4.1.0": "#",
        "((obj) => Object~1entries(obj))(navigator~1plugins).returnValue.4.1.1": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.1.value.0": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.1.value.1": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.2.value.0": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.2.value.1": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.3.value.0": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.3.value.1": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.4.value.0": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.4.value.1": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.PDF Viewer.value": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.Chrome PDF Viewer.value": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.Chromium PDF Viewer.value": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.Microsoft Edge PDF Viewer.value": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins).returnValue.WebKit built-in PDF.value": "#",
        "((obj) => Object~1getOwnPropertyNames(obj))(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.1.0": "#",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.1.1": "#",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.2.0": "#",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.2.1": "#",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.3.0": "#",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.3.1": "#",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.4.0": "#",
        "((obj) => Object~1values(obj))(navigator~1plugins).returnValue.4.1": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.1.0": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.1.1": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.2.0": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.2.1": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.3.0": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.3.1": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.4.0": "#",
        "((obj) => [~1~1~1obj])(navigator~1plugins).returnValue.4.1": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.1.0": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.1.1": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.2.0": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.2.1": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.3.0": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.3.1": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.4.0": "#",
        "((obj) => ({~1~1~1obj}))(navigator~1plugins).returnValue.4.1": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.1.0": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.1.1": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.2.0": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.2.1": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.3.0": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.3.1": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.4.0": "#",
        "((obj) => Array~1from(obj))(navigator~1plugins).returnValue.4.1": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.1.0": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.1.1": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.2.0": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.2.1": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.3.0": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.3.1": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.4.0": "#",
        "((obj) => Array~1of(obj))(navigator~1plugins).returnValue.0.4.1": "#",
        "((obj) => structuredClone(obj))(navigator~1plugins).exception": "DOMException",
        "((obj) => +obj)(navigator~1plugins).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(navigator~1plugins).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(navigator~1plugins).returnValue": "nan",
        "((obj) => parseFloat(obj))(navigator~1plugins).returnValue": "nan",
        "((obj) => parseInt(obj))(navigator~1plugins).returnValue": "nan",
        "((obj) => obj())(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => new obj())(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => obj~1prototype)(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "undef",
        "((obj) => Object~1entries(obj))(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue.length.set": "undef",
        "((obj) => Object~1getOwnPropertyNames(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => [~1~1~1obj])(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => ({~1~1~1obj}))(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => Array~1from(obj))(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => JSON~1stringify(obj))(Object~1getPrototypeOf(navigator~1plugins)).exception": "typeerror",
        "((obj) => structuredClone(obj))(Object~1getPrototypeOf(navigator~1plugins)).exception": "DOMException",
        "((obj) => +obj)(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "nan",
        "((obj) => parseFloat(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "nan",
        "((obj) => parseInt(obj))(Object~1getPrototypeOf(navigator~1plugins)).returnValue": "nan",
        "((obj) => obj())(navigator~1plugins[0]).exception": "typeerror",
        "((obj) => new obj())(navigator~1plugins[0]).exception": "typeerror",
        "((obj) => obj~1prototype)(navigator~1plugins[0]).returnValue": "undef",
        "((obj) => Object~1entries(obj))(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins[0]).returnValue.0": "arrayNonindexKeys",
        "((obj) => Object~1entries(obj))(navigator~1plugins[0]).returnValue.1": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins[0]).returnValue.application/pdf.value": "#",
        "((obj) => Object~1getOwnPropertyDescriptors(obj))(navigator~1plugins[0]).returnValue.text/pdf.value": "#",
        "((obj) => Object~1getOwnPropertyNames(obj))(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1getOwnPropertySymbols(obj))(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1keys(obj))(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => Object~1values(obj))(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => [~1~1~1obj])(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1from(obj))(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => Array~1of(obj))(navigator~1plugins[0]).returnValue": "arrayNonindexKeys",
        "((obj) => structuredClone(obj))(navigator~1plugins[0]).exception": "DOMException",
        "((obj) => +obj)(navigator~1plugins[0]).returnValue": "nan",
        "((obj) => Number~1parseFloat(obj))(navigator~1plugins[0]).returnValue": "nan",
        "((obj) => Number~1parseInt(obj))(navigator~1plugins[0]).returnValue": "nan",
        "((obj) => parseFloat(obj))(navigator~1plugins[0]).returnValue": "nan",
        "((obj) => parseInt(obj))(navigator~1plugins[0]).returnValue": "nan",
        "navigator~1plugins[5].returnValue": "undef",
        "Navigator~1prototype~1plugins.exception": "typeerror",
        "navigator~1plugins[3]~1prototype.returnValue": "undef",
        "+navigator~1plugins[3].returnValue": "nan",
        "structuredClone(navigator~1plugins[0]).exception": "DOMException",
        "Object~1getOwnPropertyNames(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "Object~1getOwnPropertySymbols(navigator~1plugins).returnValue": "arrayNonindexKeys",
        "Object~1keys(Object~1getOwnPropertyDescriptors(navigator~1plugins)).returnValue": "arrayNonindexKeys",
        "Plugin~1prototype~1item(0).exception": "typeerror",
        "navigator~1plugins~1item~1caller.exception": "typeerror",
        "navigator~1plugins~1item~1callee.returnValue": "undef",
        "navigator~1plugins~1item~1arguments.exception": "typeerror",
        "navigator~1deviceMemory.returnValue": "undef",
        "document~1documentElement~1getAttributeNames().returnValue": "arrayNonindexKeys",
        "getAllPropertyNames(document).returnValue": "arrayNonindexKeys",
        "{\n        const now = () => performance~1now() / 1000;\n        const gcd = (a, b) => {\n            if (a < 0~100000001) {\n                return b;\n            }\n            if (a < b) {\n                return gcd(b - Math~1floor(b / a) * a, a);\n            } else if (a === b) {\n                return a;\n            } else {\n                return gcd(b, a);\n            }\n        };\n\n        const x = now();\n        let g = now() - x;\n        for (let i = 0; i < 10; i++) {\n            g = gcd(g, now() - x);\n        }\n        return Math~1round(1 / g);\n    }.returnValue": "infinity",
        "{\n        const div = document~1createElement(\"div\");\n        div~1style~1border = \"~15px dotted transparent\";\n        document~1body~1appendChild(div);\n        const offsetHeight = div~1offsetHeight;\n        document~1body~1removeChild(div);\n        return [devicePixelRatio, offsetHeight];\n    }.returnValue": "arrayNonindexKeys",
        "Array~1from(navigator~1mimeTypes)~1map((mimeType) => {\n        return Object~1getPrototypeOf(mimeType) === MimeType~1prototype;\n    }).returnValue": "arrayNonindexKeys",
        "getAllPropertyNames(navigator).returnValue": "arrayNonindexKeys",
        "async () => {\n        const permission = await navigator~1permissions~1query({\n            name: \"notifications\",\n        });\n        return [Notification~1permission, permission~1state];\n    }.returnValue": "arrayNonindexKeys",
        "Array~1from(navigator~1plugins)~1map((plugin) => {\n        return Object~1getPrototypeOf(plugin) === Plugin~1prototype;\n    }).returnValue": "arrayNonindexKeys",
        "navigator~1connection~1rtt.exception": "typeerror",
        "new SharedArrayBuffer(1)~1byteLength.exception": "referenceerror",
        "navigator~1msMaxTouchPoints.returnValue": "undef",
        "{\n        const canvasElement = document~1createElement('canvas')\n        const webGLContext = canvasElement~1getContext('webgl')\n        const vendor = webGLContext~1getParameter(webGLContext~1VENDOR)\n        const renderer = webGLContext~1getParameter(webGLContext~1RENDERER)\n        const version = webGLContext~1getParameter(webGLContext~1VERSION)\n        if (InstallTrigger !== undefined) {\n            return [vendor, renderer, version]\n        }\n        const webGLDebugInfo = webGLContext~1getExtension('WEBGL_debug_renderer_info')\n        const unmaskedVendor = webGLContext~1getParameter(webGLDebugInfo~1UNMASKED_VENDOR_WEBGL)\n        const unmaskedRenderer = webGLContext~1getParameter(webGLDebugInfo~1UNMASKED_RENDERER_WEBGL)\n        return [unmaskedVendor, unmaskedRenderer, vendor, renderer, version]\n    }.returnValue": "arrayNonindexKeys",
        "getAllPropertyNames(window).returnValue": "arrayNonindexKeys"
    }
}
